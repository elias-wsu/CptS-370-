[ewerede@sig3 prog5]$ java BootthreadOS ver 1.0:Type ? for helpthreadOS: a new thread (thread=Thread[Thread-3,2,main] tid=0 pid=-1)-->l Shell l Shell threadOS: a new thread (thread=Thread[Thread-5,2,main] tid=1 pid=0)shell[1]% CmdClient 5000 sigint.eecs.wsu.edu CmdClientthreadOS: a new thread (thread=Thread[Thread-7,2,main] tid=2 pid=1)Hello  olleHwhoamiewerededateFri Apr 26 21:37:17 PDT 2024byeshell[2]% CmdClient 5000 sigint.eecs.wsu.eduCmdClientthreadOS: a new thread (thread=Thread[Thread-9,2,main] tid=3 pid=1)Hello againniaga olleHecho Hello againHello againlsBoot.classCache.classCache$Entry.classCmdClient.classCmdClient.javaCmdServer.classCmdServer.javaDateClient.classDateClient.javaDateServer.classDateServer.javaDirectory.classDISKDisk.classFileSystem.classFileTable.classFileTableEntry.classHelloWorld.classInode.classKernel.classKernel_org.classLoader.classPingPong.classQueueNode.classScheduler.classScheduler.javaShell.classSuperBlock.classSyncQueue.classSysLib.classTCB.classTest2b.classTest2c.classTest2.classTest2d.classTest2e.classTest3.classTest4.classTest5.classTest6.classTest7a.classTest7.classTestPingPong.classTestThread1.classTestThread2b.classTestThread2c.classTestThread2.classTestThread2d.classTestThread3.classls -ltotal 548lrwxrwxrwx 1 ewerede ewerede     34 Apr 11 00:00 Boot.class -> /opt/java/libs/cleanTOS/Boot.classlrwxrwxrwx 1 ewerede ewerede     35 Apr 11 00:00 Cache.class -> /opt/java/libs/cleanTOS/Cache.classlrwxrwxrwx 1 ewerede ewerede     41 Apr 11 00:00 Cache$Entry.class -> /opt/java/libs/cleanTOS/Cache$Entry.class-rw-r--r-- 1 ewerede ewerede   2488 Apr 26 21:32 CmdClient.class-rw-r--r-- 1 ewerede ewerede   3108 Apr 26 21:29 CmdClient.java-rw-r--r-- 1 ewerede ewerede   2721 Apr 26 21:32 CmdServer.class-rw-r--r-- 1 ewerede ewerede   3812 Apr 26 21:29 CmdServer.java-rw-r--r-- 1 ewerede ewerede   1567 Apr 26 21:32 DateClient.class-rw-r--r-- 1 ewerede ewerede   1512 Apr 26 20:14 DateClient.java-rw-r--r-- 1 ewerede ewerede   1262 Apr 26 21:32 DateServer.class-rw-r--r-- 1 ewerede ewerede   1052 Apr 26 20:14 DateServer.javalrwxrwxrwx 1 ewerede ewerede     39 Apr 11 00:00 Directory.class -> /opt/java/libs/cleanTOS/Directory.class-rw-r--r-- 1 ewerede ewerede 512000 Apr 26 21:27 DISKlrwxrwxrwx 1 ewerede ewerede     34 Apr 11 00:00 Disk.class -> /opt/java/libs/cleanTOS/Disk.classlrwxrwxrwx 1 ewerede ewerede     40 Apr 11 00:00 FileSystem.class -> /opt/java/libs/cleanTOS/FileSystem.classlrwxrwxrwx 1 ewerede ewerede     39 Apr 11 00:00 FileTable.class -> /opt/java/libs/cleanTOS/FileTable.classlrwxrwxrwx 1 ewerede ewerede     44 Apr 11 00:00 FileTableEntry.class -> /opt/java/libs/cleanTOS/FileTableEntry.classlrwxrwxrwx 1 ewerede ewerede     40 Apr 11 00:00 HelloWorld.class -> /opt/java/libs/cleanTOS/HelloWorld.classlrwxrwxrwx 1 ewerede ewerede     35 Apr 11 00:00 Inode.class -> /opt/java/libs/cleanTOS/Inode.classlrwxrwxrwx 1 ewerede ewerede     36 Apr 11 00:00 Kernel.class -> /opt/java/libs/cleanTOS/Kernel.classlrwxrwxrwx 1 ewerede ewerede     40 Apr 11 00:00 Kernel_org.class -> /opt/java/libs/cleanTOS/Kernel_org.classlrwxrwxrwx 1 ewerede ewerede     36 Apr 11 00:00 Loader.class -> /opt/java/libs/cleanTOS/Loader.classlrwxrwxrwx 1 ewerede ewerede     38 Apr 11 00:00 PingPong.class -> /opt/java/libs/cleanTOS/PingPong.classlrwxrwxrwx 1 ewerede ewerede     39 Apr 11 00:00 QueueNode.class -> /opt/java/libs/cleanTOS/QueueNode.class-rw-r--r-- 1 ewerede ewerede   2876 Apr 26 21:32 Scheduler.class-r--r--r-- 1 ewerede ewerede   4320 Apr 11 00:01 Scheduler.javalrwxrwxrwx 1 ewerede ewerede     35 Apr 11 00:00 Shell.class -> /opt/java/libs/cleanTOS/Shell.classlrwxrwxrwx 1 ewerede ewerede     40 Apr 11 00:00 SuperBlock.class -> /opt/java/libs/cleanTOS/SuperBlock.classlrwxrwxrwx 1 ewerede ewerede     39 Apr 11 00:00 SyncQueue.class -> /opt/java/libs/cleanTOS/SyncQueue.classlrwxrwxrwx 1 ewerede ewerede     36 Apr 11 00:00 SysLib.class -> /opt/java/libs/cleanTOS/SysLib.classlrwxrwxrwx 1 ewerede ewerede     33 Apr 11 00:00 TCB.class -> /opt/java/libs/cleanTOS/TCB.classlrwxrwxrwx 1 ewerede ewerede     36 Apr 11 00:00 Test2b.class -> /opt/java/libs/cleanTOS/Test2b.classlrwxrwxrwx 1 ewerede ewerede     36 Apr 11 00:00 Test2c.class -> /opt/java/libs/cleanTOS/Test2c.classlrwxrwxrwx 1 ewerede ewerede     35 Apr 11 00:00 Test2.class -> /opt/java/libs/cleanTOS/Test2.classlrwxrwxrwx 1 ewerede ewerede     36 Apr 11 00:00 Test2d.class -> /opt/java/libs/cleanTOS/Test2d.classlrwxrwxrwx 1 ewerede ewerede     36 Apr 11 00:00 Test2e.class -> /opt/java/libs/cleanTOS/Test2e.classlrwxrwxrwx 1 ewerede ewerede     35 Apr 11 00:00 Test3.class -> /opt/java/libs/cleanTOS/Test3.classlrwxrwxrwx 1 ewerede ewerede     35 Apr 11 00:00 Test4.class -> /opt/java/libs/cleanTOS/Test4.classlrwxrwxrwx 1 ewerede ewerede     35 Apr 11 00:00 Test5.class -> /opt/java/libs/cleanTOS/Test5.classlrwxrwxrwx 1 ewerede ewerede     35 Apr 11 00:00 Test6.class -> /opt/java/libs/cleanTOS/Test6.classlrwxrwxrwx 1 ewerede ewerede     36 Apr 11 00:00 Test7a.class -> /opt/java/libs/cleanTOS/Test7a.classlrwxrwxrwx 1 ewerede ewerede     35 Apr 11 00:00 Test7.class -> /opt/java/libs/cleanTOS/Test7.classlrwxrwxrwx 1 ewerede ewerede     42 Apr 11 00:00 TestPingPong.class -> /opt/java/libs/cleanTOS/TestPingPong.classlrwxrwxrwx 1 ewerede ewerede     41 Apr 11 00:00 TestThread1.class -> /opt/java/libs/cleanTOS/TestThread1.classlrwxrwxrwx 1 ewerede ewerede     42 Apr 11 00:00 TestThread2b.class -> /opt/java/libs/cleanTOS/TestThread2b.classlrwxrwxrwx 1 ewerede ewerede     42 Apr 11 00:00 TestThread2c.class -> /opt/java/libs/cleanTOS/TestThread2c.classlrwxrwxrwx 1 ewerede ewerede     41 Apr 11 00:00 TestThread2.class -> /opt/java/libs/cleanTOS/TestThread2.classlrwxrwxrwx 1 ewerede ewerede     42 Apr 11 00:00 TestThread2d.class -> /opt/java/libs/cleanTOS/TestThread2d.classlrwxrwxrwx 1 ewerede ewerede     41 Apr 11 00:00 TestThread3.class -> /opt/java/libs/cleanTOS/TestThread3.classps uxUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMANDewerede   2430  0.0  0.0 121376  3832 pts/12   Ss   21:35   0:00 /bin/bash --init-file /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/out/vs/workbench/contrib/terminal/browser/media/shellIntegration-bash.shewerede   2806  0.1  0.2 7173184 45856 pts/11  Sl+  21:35   0:00 java Bootewerede   3307  0.1  0.2 7173184 43732 pts/12  Sl+  21:36   0:00 java Bootewerede   6420  0.0  0.0 159700  2024 pts/11   R+   21:39   0:00 ps uxewerede   7525  0.1  0.2 860080 40380 ?        Sl   16:26   0:19 /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/node /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/out/bootstrap-fork --type=fileWatcherewerede  12968  0.0  0.0 167452  3012 ?        S    21:11   0:00 sshd: ewerede@pts/2ewerede  12971  0.0  0.0 121380  3896 pts/2    Ss+  21:11   0:00 -bashewerede  18069  0.1  0.2 860336 39772 ?        Sl   15:18   0:23 /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/node /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/out/bootstrap-fork --type=fileWatcherewerede  18375  0.0  0.0 113284  1416 ?        S    14:27   0:00 sh /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/bin/code-server --start-server --host=127.0.0.1 --accept-server-license-terms --enable-remote-auto-shutdown --port=0 --telemetry-level all --connection-token-file /net/ugrads/ewerede/pvt/.vscode-server/.f1b07bd25dfad64b0167beb15359ae573aecd2cc.tokenewerede  18387  0.3  1.3 1123080 225448 ?      Sl   14:27   1:21 /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/node /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/out/server-main.js --start-server --host=127.0.0.1 --accept-server-license-terms --enable-remote-auto-shutdown --port=0 --telemetry-level all --connection-token-file /net/ugrads/ewerede/pvt/.vscode-server/.f1b07bd25dfad64b0167beb15359ae573aecd2cc.tokenewerede  18623  0.0  0.3 1238600 52228 ?       Sl   14:27   0:22 /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/node /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/out/bootstrap-fork --type=ptyHost --logsPath /net/ugrads/ewerede/pvt/.vscode-server/data/logs/20240426T142740ewerede  19824  0.0  0.2 860592 40536 ?        Sl   14:29   0:25 /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/node /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/out/bootstrap-fork --type=fileWatcherewerede  30110  0.0  0.0 167696  3256 ?        S    21:31   0:00 sshd: ewerede@nottyewerede  30113  0.0  0.0 119664  1852 ?        Ss   21:31   0:00 -bashewerede  30218  0.0  0.0 113676  2012 ?        S    21:31   0:00 bashewerede  30267  1.4  1.0 22029292 166720 ?     Sl   21:31   0:06 /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/node --dns-result-order=ipv4first /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/out/bootstrap-fork --type=extensionHost --transformURIs --useHostProxy=falseewerede  30279  0.5  0.2 728752 34152 ?        Sl   21:31   0:02 /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/node /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/out/bootstrap-fork --type=fileWatcherewerede  30366  0.0  0.0 121376  3832 pts/11   Ss   21:31   0:00 /bin/bash --init-file /net/ugrads/ewerede/pvt/.vscode-server/bin/f1b07bd25dfad64b0167beb15359ae573aecd2cc/out/vs/workbench/contrib/terminal/browser/media/shellIntegration-bash.shewerede  30744  3.7  1.9 5793008 316016 ?      Sl   21:31   0:17 /net/ugrads/ewerede/pvt/.vscode-server/extensions/redhat.java-1.30.0-linux-x64/jre/17.0.10-linux-x86_64/bin/java --add-modules=ALL-SYSTEM --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/sun.nio.fs=ALL-UNNAMED -Declipse.application=org.eclipse.jdt.ls.core.id1 -Dosgi.bundles.defaultStartLevel=4 -Declipse.product=org.eclipse.jdt.ls.core.product -Djava.import.generatesMetadataFilesAtProjectRoot=false -DDetectVMInstallationsJob.disabled=true -Dfile.encoding=utf8 -XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable -javaagent:/net/ugrads/ewerede/pvt/.vscode-server/extensions/redhat.java-1.30.0-linux-x64/lombok/lombok-1.18.32.jar -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/net/ugrads/ewerede/pvt/.vscode-server/data/User/workspaceStorage/a69bd6812cfb2813a88c89056ac13df2/redhat.java -Daether.dependencyCollector.impl=bf -jar /net/ugrads/ewerede/pvt/.vscode-server/extensions/redhat.java-1.30.0-linux-x64/server/plugins/org.eclipse.equinox.launcher_1.6.800.v20240330-1250.jar -configuration /net/ugrads/ewerede/pvt/.vscode-server/data/User/globalStorage/redhat.java/1.30.0/config_linux -data /net/ugrads/ewerede/pvt/.vscode-server/data/User/workspaceStorage/a69bd6812cfb2813a88c89056ac13df2/redhat.java/jdt_ws --pipe=/run/user/2020080416/lsp-1db082e60070ba910b81e4c5be39ed52.sockman pkillPGREP(1)                         User Commands                        PGREP(1)NAME       pgrep,  pkill  -  look  up  or signal processes based on name and other       attributesSYNOPSIS       pgrep [options] pattern       pkill [options] patternDESCRIPTION       pgrep looks through the  currently  running  processes  and  lists  the       process IDs which match the selection criteria to stdout.  All the cri?       teria have to match.  For example,              $ pgrep -u root sshd       will only list the processes called sshd AND owned  by  root.   On  the       other hand,              $ pgrep -u root,daemon       will list the processes owned by root OR daemon.       pkill  will  send  the  specified  signal  (by default SIGTERM) to each       process instead of listing them on stdout.OPTIONS       -signal       --signal signal              Defines the signal to send to each matched process.  Either  the              numeric or the symbolic signal name can be used.  (pkill only.)       -c, --count              Suppress  normal  output; instead print a count of matching pro?              cesses.  When count does not match anything, e.g. returns  zero,              the command will return non-zero value.       -d, --delimiter delimiter              Sets  the  string  used to delimit each process ID in the output              (by default a newline).  (pgrep only.)       -f, --full              The pattern is normally only matched against the  process  name.              When -f is set, the full command line is used.       -g, --pgroup pgrp,...              Only  match  processes in the process group IDs listed.  Process              group 0 is translated into pgrep's or pkill's own process group.       -G, --group gid,...              Only match processes whose real group ID is listed.  Either  the              numerical or symbolical value may be used.       -l, --list-name              List the process name as well as the process ID.  (pgrep only.)       -a, --list-full              List  the  full  command line as well as the process ID.  (pgrep              only.)       -n, --newest              Select only the newest (most recently started) of  the  matching              processes.       -o, --oldest              Select  only the oldest (least recently started) of the matching              processes.       -P, --parent ppid,...              Only match processes whose parent process ID is listed.       -s, --session sid,...              Only match processes whose process session ID is  listed.   Ses?              sion ID 0 is translated into pgrep's or pkill's own session ID.       -t, --terminal term,...              Only  match processes whose controlling terminal is listed.  The              terminal name should be specified without the "/dev/" prefix.       -u, --euid euid,...              Only match processes whose effective user ID is listed.   Either              the numerical or symbolical value may be used.       -U, --uid uid,...              Only  match  processes whose real user ID is listed.  Either the              numerical or symbolical value may be used.       -v, --inverse              Negates the matching.  This option is usually  used  in  pgrep's              context.   In  pkill's  context  the short option is disabled to              avoid accidental usage of the option.       -w, --lightweight              Shows all thread ids instead of pids  in  pgrep's  context.   In              pkill's context this option is disabled.       -x, --exact              Only match processes whose names (or command line if -f is spec?              ified) exactly match the pattern.       -F, --pidfile file              Read PID's from file.  This option is perhaps  more  useful  for              pkill than pgrep.       -L, --logpidfile              Fail if pidfile (see -F) not locked.       --ns pid              Match  processes that belong to the same namespaces. Required to              run as root to match processes from other  users.  See  --nslist              for how to limit which namespaces to match.       --nslist name,...              Match  only  the provided namespaces. Available namespaces: ipc,              mnt, net, pid, user,uts.       -V, --version              Display version information and exit.       -h, --help              Display help and exit.OPERANDS       pattern              Specifies an Extended Regular Expression  for  matching  against              the process names or command lines.EXAMPLES       Example 1: Find the process ID of the named daemon:              $ pgrep -u root named       Example 2: Make syslog reread its configuration file:              $ pkill -HUP syslogd       Example 3: Give detailed information on all xterm processes:              $ ps -fp $(pgrep -d, -x xterm)       Example 4: Make all netscape processes run nicer:              $ renice +4 $(pgrep netscape)EXIT STATUS       0      One or more processes matched the criteria.       1      No processes matched.       2      Syntax error in the command line.       3      Fatal error: out of memory etc.NOTES       The  process  name  used  for  matching is limited to the 15 characters       present in the output of /proc/pid/stat.  Use the -f  option  to  match       against the complete command line, /proc/pid/cmdline.       The running pgrep or pkill process will never report itself as a match.BUGS       The  options  -n and -o and -v can not be combined.  Let me know if you       need to do this.       Defunct processes are reported.SEE ALSO       ps(1), regex(7), signal(7), killall(1), skill(1), kill(1), kill(2)STANDARDS       pkill and pgrep were introduced in Sun's Solaris 7.   This  implementa?       tion is fully compatible.AUTHOR       Kjetil Torgrim Homme ?kjetilho@ifi.uio.no?REPORTING BUGS       Please send bug reports to ?procps@freelists.org?procps-ng                        October 2012                         PGREP(1)dieshell[3]% exitexit-->qq[ewerede@sig3 prog5]$